Search.setIndex({"docnames": ["index", "vc", "vc.models", "vc.optimizers", "vc.variational_classifier"], "filenames": ["index.rst", "vc.rst", "vc.models.rst", "vc.optimizers.rst", "vc.variational_classifier.rst"], "titles": ["TNO Quantum", "vc package", "vc.models module", "vc.optimizers module", "vc.variational_classifier module"], "terms": {"provid": [0, 4], "gener": [0, 2], "softwar": 0, "compon": 0, "aim": 0, "facilit": 0, "applic": 0, "i": [0, 2, 3, 4], "part": 0, "python": 0, "implement": [0, 2, 4], "variat": [0, 1, 4], "classifi": [0, 1, 4], "The": [0, 1, 2, 3, 4], "see": [0, 1, 2, 3, 4], "variationalclassifi": [0, 1, 4], "class": [0, 1, 2, 3, 4], "ha": 0, "been": 0, "done": 0, "accord": 0, "scikit": [0, 4], "learn": [0, 4], "estim": 0, "api": 0, "which": 0, "mean": 0, "can": 0, "ani": [0, 1, 2, 3, 4], "other": 0, "binari": 0, "multiclass": 0, "combin": 0, "transform": 0, "through": 0, "pipelin": 0, "In": 0, "addit": 0, "make": [0, 2], "tensor": [0, 3], "loss": 0, "function": [0, 2], "pip": 0, "follow": 0, "ml": [0, 1], "option": [0, 1, 2, 3, 4], "though": 0, "requir": 0, "below": 0, "you": [0, 2], "test": 0, "dataset": 0, "here": 0, "": [0, 2], "an": [0, 2, 3], "how": 0, "classif": 0, "base": [0, 1, 2, 4], "iri": 0, "from": [0, 1, 4], "import": 0, "get_iris_dataset": 0, "x_train": [0, 4], "y_train": [0, 4], "x_valid": [0, 4], "y_valid": 0, "fit": [0, 1, 4], "predictions_valid": 0, "predict": [0, 1, 4], "intern": 0, "hybrid": 0, "classic": 0, "repres": 0, "These": 0, "give": 0, "rise": 0, "circuit": [0, 2], "run": 0, "differ": 0, "hardwar": 0, "simul": 0, "ar": [0, 1, 3, 4], "select": 0, "close": 0, "pennylan": [0, 2], "interfac": [0, 2], "specifi": 0, "devic": [0, 2], "As": [0, 2], "result": [0, 2], "plugin": 0, "also": 0, "showcas": 0, "inspir": 0, "quantuminspir": 0, "note": [0, 2], "need": 0, "describ": 0, "get_wine_dataset": 0, "n_featur": [0, 1, 2, 4], "5": [0, 1, 2, 4], "n_class": [0, 1, 2, 4], "3": 0, "random_se": 0, "0": [0, 2, 4], "name": [0, 2, 3, 4], "qi": 0, "starmon": 0, "project": 0, "my": 0, "altern": 0, "default": [0, 1, 2, 4], "qubit": [0, 2, 4], "keyword": 0, "A": 0, "defin": [0, 1, 2, 3, 4], "strategi": 0, "post": 0, "process": 0, "measur": 0, "current": 0, "two": 0, "avail": 0, "expected_values_model": 0, "expectedvaluesmodel": [0, 1, 2], "get_qfunc": [0, 1, 2], "detail": 0, "probabilities_model": [0, 4], "probabilitiesmodel": [0, 1, 2], "For": 0, "4": 0, "n_layer": [0, 2, 4], "2": [0, 2, 4], "n_trainable_sublay": [0, 2, 4], "scale": [0, 2, 4], "found": 0, "modul": [0, 1], "extend": 0, "qmodel": [0, 1, 2], "ad": 0, "them": 0, "get_model": [0, 1, 2, 4], "get_optim": [0, 1, 3, 4], "content": 0, "thi": [0, 2, 3, 4], "mai": [0, 2], "sole": 0, "compli": 0, "export": 0, "control": 0, "law": 0, "microlib": 1, "tno": 1, "quantum": [1, 2, 3, 4], "batch_siz": [1, 4], "backend": [1, 2, 4], "none": [1, 4], "model": [1, 3, 4], "optim": [1, 4], "use_bia": [1, 4], "fals": [1, 4], "random_init": [1, 4], "true": [1, 4], "warm_init": [1, 4], "random_st": [1, 2, 4], "sourc": [1, 2, 3, 4], "classifiermixin": [1, 4], "baseestim": [1, 4], "__init__": [1, 2, 4], "init": [1, 2, 4], "valu": [1, 2, 3, 4], "variational_classifi": 1, "get_default_if_non": [1, 4], "paramet": [1, 2, 3, 4], "int": [1, 2, 4], "batch": [1, 4], "size": [1, 2, 4], "us": [1, 2, 3, 4], "dure": [1, 4], "dict": [1, 2, 3, 4], "str": [1, 2, 3, 4], "docstr": [1, 2, 4], "bool": [1, 4], "set": [1, 2, 4], "bia": [1, 4], "should": [1, 2, 3, 4], "over": [1, 3, 4], "initi": [1, 2, 4], "randomli": [1, 4], "previou": [1, 4], "call": [1, 4], "random": [1, 2, 4], "seed": [1, 4], "repeat": [1, 4], "x": [1, 2, 4], "y": [1, 4], "n_iter": [1, 4], "1": [1, 2, 4], "data": [1, 2, 4], "arraylik": [1, 2, 4], "train": [1, 3, 4], "shape": [1, 2, 4], "n_sampl": [1, 2, 4], "target": [1, 4], "number": [1, 2, 4], "iter": [1, 3, 4], "return": [1, 2, 3, 4], "type": [1, 2, 3, 4], "input": [1, 2, 4], "ndarrai": [1, 2, 4], "dtype": [1, 2, 4], "get_init_weight": [1, 2], "preprocess": [1, 2], "modelerror": [1, 2], "To": 2, "add": 2, "new": 2, "updat": 2, "angl": 2, "encod": 2, "expect": 2, "unitari": 2, "u": 2, "form": [2, 3], "w_": 2, "l": 2, "cdot": 2, "ldot": 2, "where": 2, "w": 2, "trainabl": 2, "union": 2, "layer": 2, "equal": 2, "each": 2, "float": 2, "appli": 2, "get": 2, "weight": 2, "between": 2, "pi": 2, "float64": 2, "callabl": 2, "tensortyp": [2, 3], "min_max": 2, "map": [2, 3], "rang": 2, "tupl": [2, 4], "minimum": 2, "maximum": 2, "except": 2, "messag": 2, "state": 2, "probabl": 2, "aggreg": 2, "averag": 2, "per": 2, "output": 2, "arrai": 2, "mani": 2, "element": 2, "we": 2, "have": 2, "order": 2, "sampl": 2, "some": 2, "ignor": 2, "sum": 2, "one": [2, 4], "abc": 2, "abstract": 2, "dictionari": 2, "pass": [2, 3], "kwarg": [2, 3], "when": 2, "creat": [2, 3], "exampl": 2, "convert": 2, "featur": 2, "self": 2, "n_qubit": 2, "instanc": [2, 3], "determin": [2, 3], "constructor": [2, 3], "kei": 2, "object": 3, "correspond": 3, "support": 3, "sdg": 3, "stochastic_gradient_desc": 3, "adam": [3, 4], "torch": 3, "compat": 4, "usag": 4, "60": 4}, "objects": {"": [[1, 0, 0, "-", "vc"]], "vc": [[1, 1, 1, "", "VariationalClassifier"], [2, 0, 0, "-", "models"], [3, 0, 0, "-", "optimizers"], [4, 0, 0, "-", "variational_classifier"]], "vc.VariationalClassifier": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "fit"], [1, 2, 1, "", "predict"]], "vc.models": [[2, 1, 1, "", "ExpectedValuesModel"], [2, 3, 1, "", "ModelError"], [2, 1, 1, "", "ProbabilitiesModel"], [2, 1, 1, "", "QModel"], [2, 4, 1, "", "get_model"]], "vc.models.ExpectedValuesModel": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "get_init_weights"], [2, 2, 1, "", "get_qfunc"], [2, 2, 1, "", "preprocess"]], "vc.models.ModelError": [[2, 2, 1, "", "__init__"]], "vc.models.ProbabilitiesModel": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "get_init_weights"], [2, 2, 1, "", "get_qfunc"], [2, 2, 1, "", "preprocess"]], "vc.models.QModel": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "get_init_weights"], [2, 2, 1, "", "get_qfunc"], [2, 2, 1, "", "preprocess"]], "vc.optimizers": [[3, 4, 1, "", "get_optimizer"]], "vc.variational_classifier": [[4, 1, 1, "", "VariationalClassifier"], [4, 4, 1, "", "get_default_if_none"]], "vc.variational_classifier.VariationalClassifier": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "fit"], [4, 2, 1, "", "predict"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:exception", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "exception", "Python exception"], "4": ["py", "function", "Python function"]}, "titleterms": {"tno": 0, "quantum": 0, "vc": [0, 1, 2, 3, 4], "quick": 0, "instal": 0, "exampl": 0, "backend": 0, "model": [0, 2], "develop": 0, "new": 0, "support": 0, "pytorch": 0, "optim": [0, 3], "end": 0, "us": 0, "limit": 0, "packag": 1, "modul": [2, 3, 4], "variational_classifi": 4}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"TNO Quantum": [[0, "tno-quantum"]], "VC": [[0, "vc"]], "Quick Install": [[0, "quick-install"]], "Example": [[0, "example"]], "Backends": [[0, "backends"]], "Quantum Models": [[0, "quantum-models"]], "Developing New Quantum Models": [[0, "developing-new-quantum-models"]], "Support for PyTorch Optimizers": [[0, "support-for-pytorch-optimizers"]], "(End)use Limitations": [[0, "end-use-limitations"]], "vc package": [[1, "module-vc"]], "vc.models module": [[2, "module-vc.models"]], "vc.optimizers module": [[3, "module-vc.optimizers"]], "vc.variational_classifier module": [[4, "module-vc.variational_classifier"]]}, "indexentries": {"variationalclassifier (class in vc)": [[1, "vc.VariationalClassifier"]], "__init__() (vc.variationalclassifier method)": [[1, "vc.VariationalClassifier.__init__"]], "fit() (vc.variationalclassifier method)": [[1, "vc.VariationalClassifier.fit"]], "module": [[1, "module-vc"], [2, "module-vc.models"], [3, "module-vc.optimizers"], [4, "module-vc.variational_classifier"]], "predict() (vc.variationalclassifier method)": [[1, "vc.VariationalClassifier.predict"]], "vc": [[1, "module-vc"]], "expectedvaluesmodel (class in vc.models)": [[2, "vc.models.ExpectedValuesModel"]], "modelerror": [[2, "vc.models.ModelError"]], "probabilitiesmodel (class in vc.models)": [[2, "vc.models.ProbabilitiesModel"]], "qmodel (class in vc.models)": [[2, "vc.models.QModel"]], "__init__() (vc.models.expectedvaluesmodel method)": [[2, "vc.models.ExpectedValuesModel.__init__"]], "__init__() (vc.models.modelerror method)": [[2, "vc.models.ModelError.__init__"]], "__init__() (vc.models.probabilitiesmodel method)": [[2, "vc.models.ProbabilitiesModel.__init__"]], "__init__() (vc.models.qmodel method)": [[2, "vc.models.QModel.__init__"]], "get_init_weights() (vc.models.expectedvaluesmodel method)": [[2, "vc.models.ExpectedValuesModel.get_init_weights"]], "get_init_weights() (vc.models.probabilitiesmodel method)": [[2, "vc.models.ProbabilitiesModel.get_init_weights"]], "get_init_weights() (vc.models.qmodel method)": [[2, "vc.models.QModel.get_init_weights"]], "get_model() (in module vc.models)": [[2, "vc.models.get_model"]], "get_qfunc() (vc.models.expectedvaluesmodel method)": [[2, "vc.models.ExpectedValuesModel.get_qfunc"]], "get_qfunc() (vc.models.probabilitiesmodel method)": [[2, "vc.models.ProbabilitiesModel.get_qfunc"]], "get_qfunc() (vc.models.qmodel method)": [[2, "vc.models.QModel.get_qfunc"]], "preprocess() (vc.models.expectedvaluesmodel method)": [[2, "vc.models.ExpectedValuesModel.preprocess"]], "preprocess() (vc.models.probabilitiesmodel method)": [[2, "vc.models.ProbabilitiesModel.preprocess"]], "preprocess() (vc.models.qmodel method)": [[2, "vc.models.QModel.preprocess"]], "vc.models": [[2, "module-vc.models"]], "get_optimizer() (in module vc.optimizers)": [[3, "vc.optimizers.get_optimizer"]], "vc.optimizers": [[3, "module-vc.optimizers"]], "variationalclassifier (class in vc.variational_classifier)": [[4, "vc.variational_classifier.VariationalClassifier"]], "__init__() (vc.variational_classifier.variationalclassifier method)": [[4, "vc.variational_classifier.VariationalClassifier.__init__"]], "fit() (vc.variational_classifier.variationalclassifier method)": [[4, "vc.variational_classifier.VariationalClassifier.fit"]], "get_default_if_none() (in module vc.variational_classifier)": [[4, "vc.variational_classifier.get_default_if_none"]], "predict() (vc.variational_classifier.variationalclassifier method)": [[4, "vc.variational_classifier.VariationalClassifier.predict"]], "vc.variational_classifier": [[4, "module-vc.variational_classifier"]]}})